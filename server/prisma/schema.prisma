// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Article {
  id                 String     @id @default(uuid())
  title              String
  event_link         String?
  date               DateTime
  duration           String?
  organizerId        String
  organizer          User       @relation(name: "OrganizedArticles", fields: [organizerId], references: [id])
  meetingType        String?
  meeting_id         String?
  passcode           String?
  speaker            String?
  location           String?
  additional_details String?
  feedbacks          Feedback[]
  calendarId         String
  calendar           Calendar   @relation(name: "CalendarArticles", fields: [calendarId], references: [id])
  favorites          Favorite[]
  attendees          User[]     @relation("ArticleAttendees")

  @@index([calendarId])
  @@index([organizerId])
}

model Calendar {
  id              String        @id @default(uuid())
  name            String
  description     String?
  creatorId       String
  creator         User          @relation(name: "UserCalendars", fields: [creatorId], references: [id])
  canReadMembers  User[]        @relation("CanReadCalendar")
  canWriteMembers User[]        @relation("CanWriteCalendar")
  articles        Article[]     @relation(name: "CalendarArticles")
  invites         Invite[]
  requests        Request[]
  emailMembers    EmailMember[]

  @@index([creatorId])
}

model User {
  id                  String     @id @default(uuid())
  username            String
  firstName           String
  lastName            String
  password            String
  email               String     @unique
  university          String
  isAdmin             Boolean    @default(false)
  createdCalendars    Calendar[] @relation(name: "UserCalendars")
  canReadCalendars    Calendar[] @relation("CanReadCalendar")
  canWriteCalendars   Calendar[] @relation("CanWriteCalendar")
  organizedArticles   Article[]  @relation("OrganizedArticles")
  favorites           Favorite[]
  resetToken          String?
  resetTokenExpiry    Int?
  registerToken       String?
  registerTokenExpiry Int?
  emailValidated      Boolean    @default(false)
  feedbacks           Feedback[]
  requests            Request[]
  attended            Article[]  @relation("ArticleAttendees")
}

model Feedback {
  id        String  @id @default(uuid())
  articleId String
  article   Article @relation(fields: [articleId], references: [id])
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  feedback  String

  @@index([articleId])
  @@index([userId])
}

model Favorite {
  id        String  @id @default(uuid())
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  articleId String
  article   Article @relation(fields: [articleId], references: [id])

  @@index([articleId])
  @@index([userId])
}

model Invite {
  id             String   @id @default(uuid())
  email          String   @unique
  calendarId     String
  calendarName   String
  token          String   @unique
  expirationTime DateTime
  createdAt      DateTime @default(now())
  creator        String?
  calendar       Calendar @relation(fields: [calendarId], references: [id])

  @@index([calendarId])
}

model Request {
  id            String   @id @default(uuid())
  calendarId    String
  calendar      Calendar @relation(fields: [calendarId], references: [id])
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  year_of_study String?
  status        String   @default("Pending")
  message       String?
  email         String?
  created_at    DateTime @default(now())

  @@index([calendarId])
  @@index([userId])
}

model EmailMember {
  id         String   @id @default(uuid())
  email      String
  calendarId String
  calendar   Calendar @relation(fields: [calendarId], references: [id])

  @@index([calendarId])
}
